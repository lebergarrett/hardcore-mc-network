---
- name: Create waterfall plugins directory
  file:
    path: "{{ docker_compose_generator_output_path }}/bungee-plugins"
    state: directory

- name: Create Geyser-BungeeCord(Waterfall) config directory
  file:
    path: "{{ docker_compose_generator_output_path }}/data/{{ item.service_name }}/plugins/Geyser-BungeeCord"
    state: directory
  loop: "{{ containers }}"
  loop_control:
    label: "{{ item.service_name }}"
  when: item.image == 'itzg/bungeecord'

- name: Configure waterfall proxy
  template:
    src: templates/waterfall-config.yml.j2
    dest: "{{ docker_compose_generator_output_path }}/data/{{ item.service_name }}/config.yml"
    owner: "{{ docker_compose_generator_uid }}"
    group: "{{ docker_compose_generator_gid }}"
  loop: "{{ containers }}"
  loop_control:
    label: "{{ item.service_name }}"
  when: item.image == 'itzg/bungeecord'

- name: Configure Geyser-BungeeCord(Waterfall)
  template:
    src: templates/geyser-config.yml.j2
    dest: "{{docker_compose_generator_output_path }}/data/{{ item.service_name }}/plugins/Geyser-BungeeCord/config.yml"
    owner: "{{ docker_compose_generator_uid }}"
    group: "{{ docker_compose_generator_gid }}"
  loop: "{{ containers }}"
  loop_control:
    label: "{{ item.service_name }}"
  when: item.image == 'itzg/bungeecord'

- name: Purge previous Bungeecord(Waterfall) plugins from server directories
  shell: "rm {{ docker_compose_generator_output_path }}/data/{{ item.service_name }}/plugins/*.jar"
  loop: "{{ containers }}"
  loop_control:
    label: "{{ item.service_name }}"
  when: item.environment[0] == 'TYPE=WATERFALL'
  ignore_errors: yes

- name: Copy waterfall plugins to remote directory (from local share)
  synchronize:
    src: /media/shared/misc/bungee-plugins/
    dest: "{{ docker_compose_generator_output_path }}/bungee-plugins"
    delete: yes
