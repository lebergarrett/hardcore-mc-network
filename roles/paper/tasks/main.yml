---
- name: Ensure paper/spigot plugins directory is created
  file:
    path: "{{ docker_compose_generator_output_path }}/plugins"
    state: directory

- name: Purge previous paper/spigot plugins from server directories
  shell: "rm {{ docker_compose_generator_output_path }}/data/{{ item.service_name }}/plugins/*.jar"
  loop: "{{ containers }}"
  loop_control:
    label: "{{ item.service_name }}"
  when: item.environment[0] == 'TYPE=PAPER'
  ignore_errors: yes

- name: Copy common paper/spigot plugins to remote directory (from local share)
  synchronize:
    src: "/media/shared/misc/spigot-plugins/{{ item }}"
    dest: "{{ docker_compose_generator_output_path }}/plugins/{{ item }}"
    delete: yes
  loop:
    - "{{ EssentialsX }}"
    - "{{ EssentialsXSpawn }}"
    - "{{ LuckPerms }}"
    - "{{ ViaBackwards }}"
    - "{{ ViaVersion }}"
    - "{{ WorldEdit }}"
    - "{{ WorldGuard }}"
    - "{{ SimplePortals }}"
    - "{{ DragonEggDrop }}"
    - "{{ MobArena }}"

- name: Configure spigot.yml on paper servers
  template:
    src: templates/spigot.yml.j2
    dest: "{{ docker_compose_generator_output_path }}/data/{{ item.service_name }}/spigot.yml"
    owner: "{{ docker_compose_generator_uid }}"
    group: "{{ docker_compose_generator_gid }}"
  loop: "{{ containers }}"
  loop_control:
    label: "{{ item.service_name }}"
  when: item.environment[0] == 'TYPE=PAPER'

- name: Ensure container plugins directory is created
  file:
    path: "{{ docker_compose_generator_output_path }}/data/{{ item.service_name }}/plugins"
    state: directory
  loop: "{{ containers }}"
  loop_control:
    label: "{{ item.service_name }}"
  when: item.environment[0] == 'TYPE=PAPER'

- name: Ensure Essentials directory is created
  file:
    path: "{{ docker_compose_generator_output_path }}/data/{{ item.service_name }}/plugins/Essentials"
    state: directory
  loop: "{{ containers }}"
  loop_control:
    label: "{{ item.service_name }}"
  when: item.environment[0] == 'TYPE=PAPER'

- name: Configure Essentials config.yml on paper servers
  template:
    src: templates/essentials-config.yml.j2
    dest: "{{ docker_compose_generator_output_path }}/data/{{ item.service_name }}/plugins/Essentials/config.yml"
    owner: "{{ docker_compose_generator_uid }}"
    group: "{{ docker_compose_generator_gid }}"
  loop: "{{ containers }}"
  loop_control:
    label: "{{ item.service_name }}"
  when: item.environment[0] == 'TYPE=PAPER'
